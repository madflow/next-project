services:

  app:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    environment:
      - ANALYSIS_API_KEY=secret
      - ANALYSIS_API_URL=http://analysis:3003/api
      - AUTH_SECRET=2gH418GartJnclf5xCN6sErzaP3PWgru
      - AUTH_URL=http://localhost:3001
      - BASE_URL=http://localhost:3001
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-postgres}
      - MAIL_DEFAULT_SENDER='no-reply@example.com'
      - NEXT_PUBLIC_BASE_URL=http://localhost:3001
      - NEXT_PUBLIC_SITE_NAME='App'
      - NDOE_ENV=production
      - S3_ACCESS_KEY_ID=s3 
      - S3_BUCKET_NAME=app
      - S3_ENDPOINT=http://s3:7070
      - S3_REGION=us-east-1
      - S3_SECRET_ACCESS_KEY=s3
      - SITE_NAME='Better Auth and Next.js'
      - SMTP_SERVER_HOST=smtp
      - SMTP_SERVER_PASSWORD=user
      - SMTP_SERVER_PORT=1025
      - SMTP_SERVER_USERNAME=password
    ports:
      - "3001:3000"

  analysis:
    build:
      context: ./apps/analysis
    environment:
      -  ANALYSIS_DB_HOST=postgres
      -  ANALYSIS_DB_PORT=5432
      -  ANALYSIS_DB_USER=postgres
      -  ANALYSIS_DB_PASS=postgres
      -  ANALYSIS_DB_BASE=postgres
      -  ANALYSIS_DB_ECHO=false
      -  ANALYSIS_S3_REGION=us-east-1
      -  ANALYSIS_S3_BUCKET_NAME=app
      -  ANALYSIS_S3_ACCESS_KEY_ID=s3
      -  ANALYSIS_S3_SECRET_ACCESS_KEY=s3
      -  ANALYSIS_S3_ENDPOINT=http://s3:7070
      -  ANALYSIS_API_KEY=secret
      -  ANALYSIS_RELOAD=true
      -  ANALYSIS_LOG_LEVEL=DEBUG
      -  ANALYSIS_HOST=0.0.0.0
      -  ANALYSIS_PORT=3003

  # https://hub.docker.com/_/postgres/
  postgres:
    image: "postgres:17-alpine"
    command: "postgres -c log_statement=all"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    ports:
      - "5432:5432"

  rest:
    image: postgrest/postgrest
    ports:
      - "3002:3000"
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-postgres}
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:3002
    depends_on:
      - postgres

  # https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  #https://mailpit.axllent.org/docs/install/docker/
  smtp:
    image: axllent/mailpit
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  s3:
    image: versity/versitygw:latest
    ports:
      - "7070:7070"
    environment:
      ROOT_ACCESS_KEY: ${VGW_ROOT_ACCESS_KEY:-s3}
      ROOT_SECRET_KEY: ${VGW_ROOT_SECRET_KEY:-s3}
    command: >
      posix /data
    volumes:
     - s3-data:/data

volumes:
  pg-data:
    driver: local
  s3-data:
    driver: local
