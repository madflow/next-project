services:

  caddy:
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./docker/caddy/prod/Caddyfile:/etc/caddy/Caddyfile
    environment:
      - SITE_ADDRESS=${SITE_ADDRESS}
      - BASIC_AUTH=${BASIC_AUTH}

  app:
    image: ghcr.io/madflow/next-project-app:main
    environment:
      - ANALYSIS_API_KEY=${ANALYSIS_API_KEY}
      - ANALYSIS_API_URL=${ANALYSIS_API_URL}
      - AUTH_DISABLE_SIGNUP=${AUTH_DISABLE_SIGNUP}
      - AUTH_SECRET=${AUTH_SECRET}
      - AUTH_URL=${AUTH_URL}
      - BASE_URL=${BASE_URL}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
      - NEXT_PUBLIC_BASE_URL=${BASE_URL}
      - NEXT_PUBLIC_SITE_NAME=${SITE_NAME}
      - NODE_ENV=production
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_REGION=us-east-1
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - SENTRY_DSN=${APP_SENTRY_DSN}
      - SITE_NAME=${SITE_NAME}
      - SMTP_SERVER_HOST=${SMTP_SERVER_HOST}
      - SMTP_SERVER_PASSWORD=${SMTP_SERVER_PASSWORD}
      - SMTP_SERVER_PORT=${SMTP_SERVER_PORT}
      - SMTP_SERVER_USERNAME=${SMTP_SERVER_USERNAME}
    depends_on:
      postgres:
        condition: service_healthy

  analysis:
    image: ghcr.io/madflow/next-project-analysis:main
    environment:
      -  ANALYSIS_DB_HOST=${POSTGRES_HOST}
      -  ANALYSIS_DB_PORT=${POSTGRES_PORT}
      -  ANALYSIS_DB_USER=${POSTGRES_USER}
      -  ANALYSIS_DB_PASS=${POSTGRES_PASSWORD}
      -  ANALYSIS_DB_BASE=${POSTGRES_DB}
      -  ANALYSIS_DB_ECHO=false
      -  ANALYSIS_S3_REGION=us-east-1
      -  ANALYSIS_S3_BUCKET_NAME=${S3_BUCKET_NAME}
      -  ANALYSIS_S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      -  ANALYSIS_S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      -  ANALYSIS_S3_ENDPOINT=${S3_ENDPOINT}
      -  ANALYSIS_API_KEY=${ANALYSIS_API_KEY}
      -  ANALYSIS_LOG_LEVEL=${ANALYSIS_LOG_LEVEL:-INFO}
      -  ANALYSIS_HOST=0.0.0.0
      -  ANALYSIS_PORT=3000
      -  ANALYSIS_SENTRY_DSN=${ANALYSIS_SENTRY_DSN}
    depends_on:
      postgres:
        condition: service_healthy

  migrations:
    image: ghcr.io/madflow/next-project-db:main
    environment:
      - DOCKER_RUN_MIGRATIONS=1
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy

  # https://hub.docker.com/_/postgres/
  postgres:
    image: "postgres:17-alpine"
    command: "postgres -c log_statement=all"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

  #https://mailpit.axllent.org/docs/install/docker/
  smtp:
    image: axllent/mailpit
    environment:
      MP_WEBROOT: /__mail/
      MP_MAX_MESSAGES: 5000
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

volumes:
  pg-data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local
